@import '../../utils/map-deep-get.scss';
@import '../../design-tokens/colors.scss';
@import '../../design-tokens/media.scss';
@import '../../design-tokens/typography.scss';

.fdButtonGhost {
    opacity: 0;
    animation: show;
    animation-duration: 0.3s;
    animation-fill-mode: forwards;
    user-select: none;
    box-sizing: border-box;
    position: relative;
    overflow: hidden;
    min-height: 2rem;
    display: flex;
    align-items: center;
    justify-content: center;
    vertical-align: middle;
    font-size: 0.875rem;
    line-height: 1.25;
    color: var(--button-ghost-text);
    text-decoration: none;
    cursor: pointer;
    padding: 0 1rem;
    border: none;
    text-align: center;
    background-position: center;
    transition: transform 0.05s ease-out, background-color 0.1s;
    border-radius: 0;
    font-family: map-deep-get($typography, 'font-family', 'bold'), sans-serif;
    font-weight: normal;
    letter-spacing: -0.1px;
    @media screen and (max-width: map-deep-get($media, 'sizes', 's')) {
        width: 100%;
    }

    > * {
        display: inline-flex;
    }

    svg {
        fill: var(--button-ghost-text);
        width: 1rem;
        height: 1rem;
        margin: 0 0.5rem;
    }

    background-color: var(--button-ghost);
    outline-style: solid;
    outline-width: 1px;
    outline-offset: -1px;
    @media screen and (min-width: map-deep-get($media, 'sizes', 's')) {
        outline-width: 1.5px;
        outline-offset: -1.5px;
    }
    outline-color: var(--button-ghost-text);
    &:hover {
        color: var(--button-ghost-hover);
        outline-color: var(--button-ghost-hover);
        svg {
            fill: var(--button-ghost-hover);
        }
    }
    &.m {
        font-size: 1rem;
        min-height: 3rem;
        @media screen and (-ms-high-contrast: active),
            (-ms-high-contrast: none) {
            height: 100%;
            min-height: 48px;
            max-height: 48px;
        }
    }

    &:active,
    &:focus {
        outline-color: var(--button-ghost-outline);
    }

    &:hover {
        outline-color: var(--button-ghost-hover-outline);
    }

    &:before {
        position: absolute;
        transform: skewX(15deg);
        background-color: #{map-deep-get($colors, 'colors', 'primary', 25)};
        width: 0;
        height: 100%;
        @media screen and (-ms-high-contrast: active),
            (-ms-high-contrast: none) {
            left: -30%;
            top: 0;
        }
    }

    &:focus {
        color: var(--button-ghost-focus);

        svg {
            fill: var(--button-ghost-focus);
        }
    }

    /**
     * Trick to play animation after click happened
     */
    &:not(:active) {
        &:before {
            content: '';
            animation: ripple;
            animation-duration: 0.5s;
        }
    }

    &:active {
        &:before {
            content: '';
            animation: rippleReverse;
            animation-duration: 0.5s;
            animation-delay: 0.1s;
        }

        transform: scale(0.98);
        @media screen and (min-width: map-deep-get($media, 'sizes', 's')) {
            transform: scale(0.95);
            &.m {
                transform: scale(0.98);
            }
        }

        color: var(--button-ghost-active-text);
        background-color: var(--button-ghost-active);
        svg {
            fill: var(--button-ghost-active-text);
        }
    }

    &:hover {
        color: var(--button-ghost-hover);
        svg {
            fill: var(--button-ghost-hover);
        }

        &:active {
            color: var(--button-ghost-active-text);
            svg {
                fill: var(--button-ghost-active-text);
            }
        }
    }

    &:disabled,
    &:disabled:active {
        outline-color: var(--button-ghost-disabled);
        color: var(--button-ghost-disabled);
        background-color: var(--button-ghost);
        transform: scale(1);
        * {
            pointer-events: none;
        }

        svg {
            fill: var(--button-ghost-disabled);
        }
    }

    @keyframes ripple {
        0% {
            width: 0%;
            opacity: 0.25;
        }
        50% {
            opacity: 0.25;
        }
        100% {
            width: 130%;
            opacity: 0;
        }
    }

    @keyframes rippleReverse {
        0% {
            width: 130%;
            opacity: 0.25;
        }
        100% {
            width: 0%;
            opacity: 0.25;
        }
    }

    @keyframes show {
        0% {
            opacity: 0;
        }
        99% {
            opacity: 0;
        }
        100% {
            opacity: 1;
        }
    }
}
